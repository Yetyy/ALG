#include <iostream>
#include <list>

int main() {
    int n;
    std::cin >> n;
    std::list<int> l; // создаем список типа int
    for (int i = 0; i < n; i++) {
        int num;
        std::cin >> num; // считываем элемент списка
        l.push_back(num); // добавляем элемент в список
    }
    l.sort(); // сортируем список по возрастанию

    int res = 0; // переменная для хранения результата
    while (l.size() > 1) { // пока в списке больше одного элемента
        int a = l.front(); // получаем минимальный элемент
        l.pop_front(); // удаляем минимальный элемент из списка
        int b = l.front(); // получаем минимальный элемент
        l.pop_front(); // удаляем минимальный элемент из списка
        l.push_back(a + b); // добавляем сумму минимальных элементов в список
        l.sort();
        res += a + b; // добавляем сумму минимальных элементов к результату
    }
    std::cout << res << std::endl; // выводим результат
    return 0;
}

//#include <iostream>
//#include <set>
//
//int main() {
//    int n;
//    std::cin >> n;
//    std::multiset<int> s; // создаем множество типа int 
//    for (int i = 0; i < n; i++) {
//        int num;
//        std::cin >> num; // считываем элемент множества
//        s.insert(num); // добавляем элемент в множество
//    }
//
//    int res = 0; // переменная для хранения результата
//    while (s.size() > 1) { // пока в множестве больше одного элемента
//        int a = *s.begin(); // получаем минимальный элемент
//        s.erase(s.begin()); // удаляем минимальный элемент из множества
//        int b = *s.begin(); // получаем минимальный элемент
//        s.erase(s.begin()); // удаляем минимальный элемент из множества
//        s.insert(a + b); // добавляем сумму минимальных элементов в множество
//        res += a + b; // добавляем сумму минимальных элементов к результату
//    }
//
//    std::cout << res << std::endl; // выводим результат
//    return 0;
//}